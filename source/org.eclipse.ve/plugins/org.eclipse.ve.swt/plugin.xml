<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin
   id="org.eclipse.ve.swt"
   name="%pluginName"
   version="1.0.2"
   provider-name="%providerName"
   class="org.eclipse.ve.internal.swt.SwtPlugin">

   <runtime>
      <library name="ve_swt.jar">
         <export name="*"/>
         <packages prefixes="org.eclipse.ve.internal.swt,org.eclipse.jem.internal"/>
      </library>
      <library name="swtcodegen.jar">
         <export name="*"/>
         <packages prefixes="org.eclipse.ve.internal.swt.codegen"/>
      </library>
   </runtime>
   <requires>
      <import plugin="org.eclipse.ve.java.core"/>
      <import plugin="org.eclipse.jdt.core"/>
      <import plugin="org.eclipse.jdt.ui"/>
      <import plugin="org.eclipse.emf.common"/>
      <import plugin="org.eclipse.jface"/>
      <import plugin="org.eclipse.jface.text"/>
      <import plugin="org.eclipse.ve.cde"/>
      <import plugin="org.eclipse.gef"/>
      <import plugin="org.eclipse.ui"/>
      <import plugin="org.eclipse.ui.views"/>
      <import plugin="org.eclipse.ve.propertysheet"/>
      <import plugin="org.eclipse.emf.ecore"/>
      <import plugin="org.eclipse.jem.proxy"/>
      <import plugin="org.eclipse.jem.beaninfo"/>
      <import plugin="org.eclipse.jem"/>
      <import plugin="org.eclipse.jem.workbench"/>
      <import plugin="org.eclipse.core.resources"/>
      <import plugin="org.eclipse.jdt.launching"/>
      <import plugin="org.eclipse.ui.ide"/>
      <import plugin="com.ibm.wtp.common.util"/>
      <import plugin="org.eclipse.core.runtime"/>
      <import plugin="org.eclipse.debug.core"/>
   </requires>


<!-- To enable a Java project to work with SWT there is a container -->
   <extension
         point="org.eclipse.jdt.ui.classpathContainerPage">
      <classpathContainerPage
            name="%classContainerPageName"
            class="org.eclipse.ve.internal.swt.SWTContainerWizardPage"
            id="SWT_CONTAINER">
      </classpathContainerPage>
   </extension>
<!-- There is also an initializer to resolve the wizard entry into an actual SWTContainer -->
   <extension
         point="org.eclipse.jdt.core.classpathContainerInitializer">
      <classpathContainerInitializer
            class="org.eclipse.ve.internal.swt.SWTContainerInitializer"
            id="SWT_CONTAINER">
      </classpathContainerInitializer>
   </extension>
   <extension
         point="org.eclipse.jem.proxy.contributors">
      <contributor
            plugin="org.eclipse.swt"
            class="org.eclipse.ve.internal.swt.SWTConfigurationContributor">
      </contributor>
   </extension>
   <extension
         point="org.eclipse.jem.beaninfo.registrations">
      <registration
            container="SWT_CONTAINER"
            plugin="org.eclipse.swt">
         <beaninfo
               path="vm/swtbeaninfo.jar">
            <searchpath
                  package="org.eclipse.swt.widgets.beaninfo">
            </searchpath>
         </beaninfo>
         <override
               package="org.eclipse.swt.widgets"
               path="overrides/org/eclipse/swt/widgets">
         </override>
         <override
               package="org.eclipse.swt.graphics"
               path="overrides/org/eclipse/swt/graphics">
         </override>
         <override
               package="org.eclipse.swt.layout"
               path="overrides/org/eclipse/swt/layout">
         </override>
         <override
               package="org.eclipse.swt.browser"
               path="overrides/org/eclipse/swt/browser">
         </override>
         <override
               package="org.eclipse.swt.custom"
               path="overrides/org/eclipse/swt/custom">
         </override>
      </registration>
   </extension>
   <extension
         point="org.eclipse.ve.java.core.contributors">
      <palette
            container="SWT_CONTAINER"
            categories="swtpalette.xmi"
            plugin="org.eclipse.swt">
      </palette>
   </extension>
   
   <extension
         point="org.eclipse.ui.popupMenus">
   	 <!-- 
	 	Set Text option on swt controls
	 -->
     <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.internal.swt.editorpart.settextaction.popup.object">
         <filter
               name="BEANTYPE"
               value="org.eclipse.swt.widgets.Control">
         </filter>
         <filter
               name="PROPERTY"
               value="text">
         </filter>
         <action
               label="%PopupMenus.SetTextAction.Label  Set Text"
               class="org.eclipse.ve.internal.swt.SetTextObjectActionDelegate"
               id="org.eclipse.ve.internal.swt.settextaction">
         </action>
      </objectContribution>
   <!-- 
	 Show and Hide grid on null and GridLayout policies
	-->
      <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.internal.swt.showgridaction.popup.object">
         <filter
               name="BEANTYPE"
               value="org.eclipse.swt.widgets.Composite">
         </filter>
         <filter
               name="EDITPOLICY#showgrid"
               value="false">
         </filter>
         <action
               label="%PopupMenus.ShowGridAction.Label  Show Grid"
               class="org.eclipse.ve.internal.cde.core.ShowGridObjectActionDelegate"
               id="org.eclipse.ve.internal.swt.showgridaction">
         </action>
      </objectContribution>
      <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.internal.swt.hidegridaction.popup.object">
         <filter
               name="BEANTYPE"
               value="org.eclipse.swt.widgets.Composite">
         </filter>
         <filter
               name="EDITPOLICY#showgrid"
               value="true">
         </filter>
         <action
               label="%PopupMenus.HideGridAction.Label  Hide Grid"
               class="org.eclipse.ve.internal.cde.core.ShowGridObjectActionDelegate"
               id="org.eclipse.ve.internal.swt.hidegridaction">
         </action>
      </objectContribution>
   	 <!-- 
	 	Change Parent on a Shell widget
	 -->
     <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.internal.swt.changeparentaction.popup.object">
         <visibility>
            <objectState
                  name="BEANTYPE"
                  value="org.eclipse.swt.widgets.Shell">
            </objectState>
         </visibility>
         <action
               label="%PopupMenus.ChangeParentAction.Label  Change Parent..."
               class="org.eclipse.ve.internal.swt.ChangeParentShellObjectActionDelegate"
               id="org.eclipse.ve.internal.swt.changeparentaction">
         </action>
      </objectContribution>
   </extension> 

<!-- Contribute to the ChooseBean dialog to allow dropping of SWT widgets -->
   
  <extension
         point="org.eclipse.ve.java.core.choosebean">
      <contributor container="SWT_CONTAINER" plugin="org.eclipse.swt"
            class="org.eclipse.ve.internal.swt.SWTChooseBeanContributor">
      </contributor>
   </extension>

<!-- Contribute to the New Visual wizard to populate the Style tree -->

  <extension
 		point="org.eclipse.ve.java.core.newStyleComponent">
		<category
			name="%NewStyleComponent.SWT"
			id="org.eclipse.ve.swt.cat"
			priority="100"
			defaultExpand="false">
		</category>
			<visualElement
				 pluginId="org.eclipse.swt"
		         container="SWT_CONTAINER"
	    	     type="java.lang.Object"
	        	 icon="icons/full/clcl16/shell_obj.gif"
		         category="org.eclipse.ve.swt.cat"
	    	     contributor="org.eclipse.ve.internal.java.codegen.wizards.contributors.SWTApplicationSourceContributor"
	        	 name="%NewStyleComponent.Application">
			</visualElement>
			<visualElement
				 pluginId="org.eclipse.swt"
		         container="SWT_CONTAINER"
	    	     type="java.lang.Object"
	        	 icon="icons/full/clcl16/shell_obj.gif"
		         category="org.eclipse.ve.swt.cat"
	    	     contributor="org.eclipse.ve.internal.java.codegen.wizards.contributors.ShellSourceContributor"
	        	 name="%NewStyleComponent.Shell">
			</visualElement>
			<visualElement
				 pluginId="org.eclipse.swt"
		         container="SWT_CONTAINER"
		         type="org.eclipse.swt.widgets.Composite"
		         icon="icons/full/clcl16/composite_obj.gif"
		         category="org.eclipse.ve.swt.cat"
		         contributor="org.eclipse.ve.internal.java.codegen.wizards.contributors.CompositeSourceContributor"
		         name="%NewStyleComponent.Composite">
			</visualElement>
  </extension>   
  
    <!-- Add an SWT Examples category to the new wizard -->
  <extension
      point="org.eclipse.ui.newWizards">
      <category
            name="%Example.SWT"
            parentCategory="org.eclipse.ui.Examples/org.eclipse.ve.java.core.examples"
            id="org.eclipse.ve.swt.SWTExample">
      </category>
      <wizard
            name="Simple SWT Browser"
            icon="icons/full/clcl16/browser_obj.gif"
            category="org.eclipse.ui.Examples/org.eclipse.ve.java.core.examples/org.eclipse.ve.swt.SWTExample"
            id="org.eclipse.ve.internal.java.codegen.wizards.VisualClassExampleWizard.SimpleSWTBrowser">
         <class class="org.eclipse.ve.internal.java.codegen.wizards.VisualClassExampleWizard">
         	<parameter name="exampleFile" value="SimpleSWTBrowser"/>
         	<parameter name="classpathContainerPlugin" value="org.eclipse.swt"/>
         	<parameter name="classpathContainerName" value="SWT_CONTAINER"/>
         </class>
         <description>
            %Example.SimpleSWTBrowser.Desc
         </description>
      </wizard>
      <wizard
            name="Simple Text Editor"
            icon="icons/full/clcl16/textarea_obj.gif"
            category="org.eclipse.ui.Examples/org.eclipse.ve.java.core.examples/org.eclipse.ve.swt.SWTExample"
            id="org.eclipse.ve.internal.java.codegen.wizards.VisualClassExampleWizard.SimpleSWTTextEditor">
         <class class="org.eclipse.ve.internal.java.codegen.wizards.VisualClassExampleWizard">
         	<parameter name="exampleFile" value="SimpleSWTTextEditor"/>
         	<parameter name="classpathContainerPlugin" value="org.eclipse.swt"/>
         	<parameter name="classpathContainerName" value="SWT_CONTAINER"/>
         </class>
         <description>
            %Example.SimpleSWTTextEditor.Desc
         </description>
      </wizard>
   </extension>
  <extension
        id="buildpath"
        name="%buildpath"
        point="org.eclipse.core.resources.markers">
     <super type="org.eclipse.core.resources.problemmarker"/>
  </extension>

</plugin>
