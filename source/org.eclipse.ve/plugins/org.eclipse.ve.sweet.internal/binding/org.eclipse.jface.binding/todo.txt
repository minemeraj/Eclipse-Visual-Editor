Legend:
  (+) work on this can start right away, or has started already.
  (-) Requires new or changed API

+ Write more default converters between object types.
+ Write tests for the updatables on the model side.
+ Write tests for the binding code.
+ (Joe) Write tests for the updatables on the widget side.
+ (Joe) Build showcase example.
+ (Boris) Support other update policies for SWT widgets (e.g. focus lost)
+ Write generic updatables for Java bean model objects.
+ Write examples with validation.
+ Build end-to-end example.
+ Write updatables for POJOs.
- Validation: keystroke-by-keystroke validation should use VERIFY event type and set e.doit to false if not valid
- How does sorting and filtering affect the data binding story?
- Adding/Removing/Reordering columns in a table.
- Support binding to an editable combo. (What does this mean)?
- (Boris) Support virtual tables.
- Support other cell editors, not just TextCellEditor.
- (Boris) How are factories registered, and how does the look-up work?
- Are factories for IUpdatables, IConverters, IValidators all treated in the same way?
- How could multi-value validation work?
- Once the API for tables is more stable, derive API for lists
- (Boris) Allow binding contexts to be nested. Reasons for this are:
  - Factories are registered for a longer time than the life of a concrete binding context.
  - Validation on sub-parts
  - Allow overriding of factories in subcontexts.
  

Done:
- (Boris) Maybe expose something like EMFDerivedUpdatableValue in a more generic way?
+ (Joe) Add support for binding to a Label