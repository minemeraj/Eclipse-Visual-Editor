<?xml version="1.0"?>
<!--************************************************************************
 * Copyright (c) 2006-2007, Cloudsmith Inc.
 * The code, documentation and other materials contained herein have been
 * licensed under the Eclipse Public License - v 1.0 by the copyright holder
 * listed above, as the Initial Contributor under such license. The text of
 * such license is available at www.eclipse.org.
 ************************************************************************-->

<project name="project" default="all">
	<!--Property file containing overrides for the default properties
	  -->
	<property environment="env" />
	<property file="build.properties" />

	<!-- if we are not running in Huson, we some up with a reasonable default -->
	<condition property="build.root" value="${env.WORKSPACE}" else="${basedir}/../build">
		<isset property="env.WORKSPACE" />
	</condition>

	<!--Default properties intended to be overridden by entries in the
		above property file.
	-->
	<property name="tools" location="${build.root}/tools" />
	<property name="result" location="${build.root}/result" />
	<property name="workspace" location="${result}/workspace" />
	<property name="targetPlatformPath" location="${result}/tp" />

	<property name="buckminster.output.root" location="${result}/output" />
	<property name="buckminster.temp.root" location="${result}/temp" />
	<property name="eclipse.staging.area" location="${result}/signing" />

	<!-- This macro executes the default application of an eclipse installation that resides
	     in the folder ${buildtools}/@app
	  -->
	<macrodef name="eclipse.launch">
		<attribute name="app" />
		<element name="args" optional="true" />
		<sequential>
			<!-- We assume that the eclipse installation is beneath ${buildtools} -->
			<property name="@{app}.deploy.dir" value="${tools}/@{app}" />

			<!-- Find the Eclipse launcher and assing its location to the @{app}.launcher property -->
			<pathconvert property="@{app}.launcher">
				<first count="1">
					<sort>
						<fileset dir="${@{app}.deploy.dir}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
						<reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
							<date />
						</reverse>
					</sort>
				</first>
			</pathconvert>

			<!-- Launch the eclipse application -->
			<java fork="true" jar="${@{app}.launcher}" dir="${@{app}.deploy.dir}" failonerror="true">
				<args />
			</java>
		</sequential>
	</macrodef>

	<macrodef name="buckminster">
		<attribute name="command" />
		<attribute name="workspace" default="${workspace}" />
		<element name="globargs" optional="true" />
		<element name="cmdargs" optional="true" />
		<sequential>
			<eclipse.launch app="buckminster">
				<args>
					<jvmarg value="-Dbugfix.288796=true"/>
					<arg value="-data" />
					<arg value="@{workspace}" />
					<arg value="--loglevel" />
					<arg value="${buckminster.loglevel}" />
					<arg value="--displaystacktrace" />
					<globargs />
					<arg value="@{command}" />
					<arg value="-P" />
					<arg value="${properties.tmp}" />
					<cmdargs />
				</args>
			</eclipse.launch>
		</sequential>
	</macrodef>

	<target name="init.checks">
		<available file="${tools}/director/director" property="director.exists" />
		<available file="${tools}/buckminster/buckminster" property="buckminster.exists" />
		<available file="${local.workspace.gzip}" property="workspace.gzip.exists" />
		<available file="${workspace}" type="dir" property="workspace.exists" />
	</target>

	<target name="get.director" unless="director.exists">
		<echo message="Fetching headless director application" />
		<tempfile destdir="${java.io.tmpdir}" prefix="director-" suffix=".zip" property="director.zip" deleteonexit="true" />
		<get src="${director.url}" dest="${director.zip}" />
		<mkdir dir="${tools}" />
		<unzip src="${director.zip}" dest="${tools}" />
		<delete file="${director.zip}" />
	</target>

	<target name="install.buckminster" unless="buckminster.exists" depends="get.director">
		<echo message="Configuring headless buckminster with needed features" />
		<echo message="Headless site: ${bm.headless.site}" />
		<echo message="External site: ${bm.external.site}" />
		<eclipse.launch app="director">
			<args>
				<jvmarg value="-Declipse.p2.mirrors=false" />
				<arg value="-r" />
				<arg value="${bm.headless.site}" />
				<arg value="-r" />
				<arg value="${bm.external.site}" />
				<arg value="-d" />
				<arg value="${tools}/buckminster" />
				<arg value="-p" />
				<arg value="Buckminster" />
				<arg value="-i" />
				<arg value="org.eclipse.buckminster.cmdline.product" />
				<arg value="-i" />
				<arg value="org.eclipse.buckminster.core.headless.feature.feature.group" />
				<arg value="-i" />
				<arg value="org.eclipse.buckminster.pde.headless.feature.feature.group" />
				<arg value="-i" />
				<arg value="org.eclipse.buckminster.cvs.headless.feature.feature.group" />
				<arg value="-i" />
				<arg value="org.eclipse.buckminster.emma.headless.feature.feature.group" />
			</args>
		</eclipse.launch>
	</target>

	<target name="init.build.properties">
		<!-- Echo relevant properties to a temporary file so that Buckminster can read them
		  -->
		<tempfile destdir="${java.io.tmpdir}" prefix="build-" suffix=".properties" deleteonexit="true" property="properties.tmp" />
		<echoproperties destfile="${properties.tmp}">
			<!-- We don't want these. basedir in particular will cause problems if passed explicitly -->
			<propertyset negate="true">
				<propertyref name="basedir" />
				<propertyref name="eclipse.home" />
				<propertyref name="properties.tmp" />
				<propertyref name="line.separator" />
				<propertyref name="path.separator" />
				<propertyref prefix="ant." />
				<propertyref prefix="file." />
				<propertyref prefix="java." />
				<propertyref prefix="sun." />
				<propertyref prefix="user." />
			</propertyset>
		</echoproperties>
	</target>

	<target name="provision" depends="init.checks,install.buckminster,init.build.properties">
		<echo message="Importing projects into workspace ${workspace} and binaries into target platform ${targetPlatformPath}" />
		<buckminster command="installJRE">
			<cmdargs>
				<arg value="--location" />
				<arg value="${jdk1.5.dir}" />
			</cmdargs>
		</buckminster>

		<buckminster command="setpref">
			<cmdargs>
				<arg value="targetPlatformPath=${targetPlatformPath}" />
			</cmdargs>
		</buckminster>
		<buckminster command="import">
			<!-- Uncomment to debug <globargs><jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/></globargs> -->
			<cmdargs>
				<arg value="-P" />
				<arg value="${basedir}/build.properties" />
				<arg value="${basedir}/build.mspec" />
			</cmdargs>
		</buckminster>
	</target>

	<target name="eclipse.build" depends="provision">
		<echo message="Invoking all eclipse builders on workspace ${workspace}" />
		<buckminster command="build" />
	</target>

	<target name="site.p2" depends="eclipse.build">
		<echo message="Performing org.eclipse.ve.feature#site.p2" />
		<buckminster command="perform">
			<cmdargs>
				<arg value="org.eclipse.ve.feature#site.p2" />
			</cmdargs>
		</buckminster>
	</target>

<!--
	<target name="all" depends="clean.workspace,clean.output,clean.tp,provision,eclipse.build,site.p2,test" /> 
-->
	<target name="all" depends="clean.workspace,provision,eclipse.build,site.p2" /> 

	<target name="clean.all" depends="clean.tools,clean.workspace,clean.tp,clean.output" />
	<target name="clean.tools">
		<delete dir="${tools}/director" failonerror="true" quiet="true" />
		<delete dir="${tools}/buckminster" failonerror="true" quiet="true" />
	</target>

	<target name="clean.tp">
		<delete dir="${targetPlatformPath}" failonerror="true" quiet="true" />
	</target>

	<target name="clean.workspace">
		<delete dir="${workspace}" failonerror="true" quiet="true" />
	</target>

	<target name="clean.output">
		<delete dir="${result}" failonerror="true" quiet="true" />
	</target>
</project>
