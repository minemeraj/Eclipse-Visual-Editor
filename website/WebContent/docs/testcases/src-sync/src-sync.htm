<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Test source code synchronization
</title>
<style>
<!--
 p.MsoNormal
	{mso-style-parent:"";
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	margin-left:0in; margin-right:0in; margin-top:0in}
-->
</style>
</head>

<body>

<p class="MsoNormal"><b><u><span style="font-family: sans-serif"><font size="3">
Procedure</font></span></u></b> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">This test is meant to 
be an assault on the underlying worker threads that the VE's code generation employs to generate 
code and listen for changes in the model and source code.</span> <br>
<br>
<span style="font-family: sans-serif"><u><b><font size="3">Setup</font></b></u></span></p>
<p class="MsoNormal">&nbsp;</p>
<p class="MsoNormal"><span style="font-size: 10.0pt; font-family: sans-serif">
Create a simple visual class consisting of a JFrame and a few Swing beans with 
the layout manager of the JFrame’s content pane set to FlowLayout.</span> <br>
<br>
<b><span style="font-family: sans-serif">Bean Removal Test</span></b> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">In the source code, 
comment out the private field for one of the beans, for example</span> <br>
<tt style="font-family: Courier New"><span style="font-size: 10.0pt">// private 
javax.swing.JButton jButton1 = null;</span></tt> <br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">
</span><span style="font-size: 10.0pt; font-family: sans-serif">that the 
corresponding bean no longer appears in the graphical view.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Produce the same effect 
by commenting out a VE-generated member function for one of the beans.</span>
<br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">
</span><span style="font-size: 10.0pt; font-family: sans-serif">that the 
corresponding bean no longer appears in the graphical view.</span> <br>
<br>
<b><span style="font-family: sans-serif">User Modifications/Code Test</span></b>
<br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Change the order of any 
two private fields in the source code </span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that the graphical model remains unchanged.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Insert your own user 
code inside of a VE-generated method</span> <br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that the graphical model remains unchanged.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Create your own methods 
in various placed within the source code</span> <br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that the graphical model isn’t changed.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Cut and paste these 
methods as well as the VE-generated methods to rearrange the order of methods 
in the source code </span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that the graphical model stays consistent throughout the rearrangement process.</span>
<br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that editing the source code is natural and defect-free. For example, the cursor 
should never leave the place where you’re currently typing and nothing should 
get highlighted, replaced, or otherwise disturbed without your consent.</span>
<br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Drop a JPanel on the 
freeform and a JButton on the freeform. Add the line </span>
<tt style="font-family: Courier New"><span style="font-size: 10.0pt">&quot;int i = 
10;&quot;</span></tt><span style="font-size: 10.0pt; font-family: sans-serif"> to the 
JButton accessor method and then move the JButton into the JPanel. </span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that the &quot;int i&quot; statement is not lost.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Edit properties from 
the Property Sheet(PS) by manually typing into the code, and </span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that CodeGen’s generated statements are put in the right place and don’t create 
un-compilable code. </span><br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Insert 
statements like &quot;</span><tt style="font-family: Courier New"><span style="font-size: 10.0pt">int 
myVar = 42;</span></tt><span style="font-size: 10.0pt; font-family: sans-serif">&quot; 
into the code where the members are declared and within the accessor methods and 
then set properties or add beans to containers.</span> <br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif"> 
that nothing unusual happens.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Test local variables 
with same name:</span> <br>
<span style="font-size: 10.0pt; font-family: sans-serif">Drop two panels and set 
both of their layout managers to BorderLayout. For each BorderLayout, set the 
hgap to something. Now close the VE and open the file with a plain Java editor. 
The layout managers will each have local variables called layBorderLayoutXXX. 
Make them both the same name and then reopen the file with the VE editor.
</span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify
</span></b><span style="font-size: 10.0pt; font-family: sans-serif">that both 
panels have BorderLayout set as their layout property.</span> <br>
<br>
<b><span style="font-family: sans-serif">Parsing Test</span></b> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Drop a JButton onto the 
free form.</span> <br>
<span style="font-size: 10.0pt; font-family: sans-serif">Select the JButton, in 
the Property Sheet, set the 'text' property to &quot;stuff&quot; (or anything). This will 
add a statement in the getJButton() method: &nbsp;</span><tt style="font-family: Courier New"><span style="font-size: 10.0pt">jButton.setText(&quot;stuff&quot;);</span></tt>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">In the source viewer, 
set the text to something else, (e.g. &quot;more stuff&quot;). </span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify
</span></b><span style="font-size: 10.0pt; font-family: sans-serif">that 
round-tripping works, i.e. the PS &nbsp;and canvas should change to reflect the new 
text.</span> <br>
<br>
<span style="font-size: 10.0pt; font-family: sans-serif">Change the text several 
more times from the source, </span><br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify
</span></b><span style="font-size: 10.0pt; font-family: sans-serif">the PS and 
canvas stays up-to-date.</span> <br>
<br>
<b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">Verify</span></b><span style="font-size: 10.0pt; font-family: sans-serif; color: blue">
</span><span style="font-size: 10.0pt; font-family: sans-serif">that deleting 
all of the source content of a class is properly reflected on the canvas and in 
the PS</span></p>

</body>

</html>