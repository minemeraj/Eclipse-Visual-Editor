<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
	xmlns:xmi="http://www.omg.org/XMI" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:org.eclipse.ve.internal.cde.decorators="http:///org/eclipse/ve/internal/cde/decorators.ecore"
    xmlns:org.eclipse.ve.internal.cde.utility="http:///org/eclipse/ve/internal/cde/utility.ecore" 
    xmlns:codeGenHelpers="platform:/plugin/org.eclipse.ve.java.core/overrides/codegenHelpers.ecore"    
    xmlns:org.eclipse.ve.internal.jcm="http:///org/eclipse/ve/internal/jcm.ecore"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" 
	xmlns:com.ibm.etools.java="java.xmi"
    xmlns:event="event.xmi">	
  <event:AddMany xmi:version="2.0" featureName="eAnnotations">
    <addedEObjects xsi:type="org.eclipse.ve.internal.cde.decorators:ClassDescriptorDecorator"
     	graphViewClassname="org.eclipse.ve.swt/org.eclipse.ve.internal.swt.CompositeGraphicalEditPart"
    	treeViewClassname="org.eclipse.ve.swt/org.eclipse.ve.internal.swt.CompositeTreeEditPart">
      <graphic xsi:type="org.eclipse.ve.internal.cde.utility:GIFFileGraphic" resourceName="platform:/plugin/org.eclipse.ve.swt/icons/full/clcl16/shell_obj.gif"/>
    </addedEObjects>
    <addedEObjects xsi:type="org.eclipse.ve.internal.jcm:BeanDecorator"
        beanProxyClassName="org.eclipse.ve.swt/org.eclipse.ve.internal.swt.CompositeProxyAdapter"/>
    <!-- Turn this one on and get rid of the previous when bug 60977 is fixed by codegen to not ignore the parse tree.
      addedEObjects xsi:type="org.eclipse.ve.internal.jcm:BeanDecorator"
        beanLocation="GLOBAL_GLOBAL"    
        beanProxyClassName="org.eclipse.ve.swt/org.eclipse.ve.internal.swt.CompositeProxyAdapter"/ -->
        
    <addedEObjects xsi:type="codeGenHelpers:CodeGenHelperClass" source="codegen.CodeGenHelperClass"
        expDecoder="org.eclipse.ve.swt/org.eclipse.ve.internal.swt.codegen.CompositeDecoder"/>    
  </event:AddMany>
  <event:AddMany featureName="eStructuralFeatures">
    <!-- Layout property has special property sheet processing for changing layoutData properties (constraints) when layouts are switched -->
    <addedEObjects xsi:type="ecore:EReference" name="layout" unsettable="true">
      <eAnnotations xsi:type="org.eclipse.ve.internal.cde.decorators:PropertyDescriptorInformation"
          propertyDescriptorClassname="org.eclipse.ve.swt/org.eclipse.ve.internal.swt.LayoutPropertyDescriptor"/>
    </addedEObjects>    
    <!-- The composite/controls relationship is not containment.  This means that by default a method will be created by the RuledCommandBuilder that owns the child control -->
    <addedEObjects xsi:type="ecore:EReference" name="controls" eType="com.ibm.etools.java:JavaClass java:/org.eclipse.swt.widgets#Control"
        upperBound="-1" containment="false">
      <eAnnotations xsi:type="org.eclipse.ve.internal.cde.decorators:PropertyDescriptorDecorator" hidden="true"/>
      <eAnnotations xsi:type="org.eclipse.ve.internal.jcm:BeanFeatureDecorator" childFeature="true"/>
    </addedEObjects>
  </event:AddMany>
</xmi:XMI>