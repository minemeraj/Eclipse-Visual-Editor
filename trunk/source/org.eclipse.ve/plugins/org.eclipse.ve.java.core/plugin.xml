<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin
   id="org.eclipse.ve.java.core"
   name="%pluginName"
   version="1.0.1"
   provider-name="%providerName"
   class="org.eclipse.ve.internal.java.core.JavaVEPlugin">

   <runtime>
      <library name="core.jar">
         <export name="*"/>
         <packages prefixes="org.eclipse.ve.internal.java,org.eclipse.ve.internal.jcm"/>
      </library>
      <library name="codegen.jar">
         <export name="*"/>
         <packages prefixes="org.eclipse.ve.internal.java.codegen"/>
      </library>
      <library name="common.jar">
         <export name="*"/>
         <packages prefixes="org.eclipse.ve.internal.java.common"/>
      </library>
   </runtime>
   <requires>
      <import plugin="org.eclipse.ve.cde"/>
      <import plugin="org.eclipse.jem.beaninfo"/>
      <import plugin="org.eclipse.jdt.core"/>
      <import plugin="org.eclipse.jdt.ui"/>
      <import plugin="org.eclipse.debug.core"/>
      <import plugin="org.eclipse.emf.codegen"/>
      <import plugin="org.eclipse.debug.ui"/>
      <import plugin="org.eclipse.jdt.debug.ui"/>
      <import plugin="org.eclipse.ui.views"/>
      <import plugin="org.eclipse.ui.editors"/>
      <import plugin="org.eclipse.ui.workbench.texteditor"/>
      <import plugin="org.eclipse.jface.text"/>
      <import plugin="org.eclipse.ui.ide"/>
      <import plugin="org.eclipse.jface"/>
      <import plugin="org.eclipse.gef"/>
      <import plugin="org.eclipse.ve.propertysheet"/>
      <import plugin="org.eclipse.jem"/>
      <import plugin="org.eclipse.core.resources"/>
      <import plugin="org.eclipse.jem.proxy"/>
      <import plugin="org.eclipse.jdt.launching"/>
      <import plugin="org.eclipse.emf.ecore.xmi"/>
      <import plugin="org.eclipse.ui.workbench"/>
      <import plugin="org.eclipse.jem.workbench"/>
      <import plugin="org.eclipse.core.filebuffers"/>
      <import plugin="com.ibm.wtp.common.util"/>
      <import plugin="org.eclipse.core.runtime"/>
      <import plugin="com.ibm.wtp.emf.workbench"/>
   </requires>


   <extension-point id="style" name="Parsing/generation style"/>
<!-- The syntax for creating a look and feel is								-->
<!--   <extension point="org.eclipse.ve.internal.java.core.vce.lookandfeel">				-->
<!--      <lookandfeel name="Plugin" class="com.mylookandfeel.MyLFClass"/>	-->
<!--    </extension>   														-->
<!-- The look and feel will then appear on the preferences page and the user	-->
<!-- can make it the workbench default for the Visual Editor 					-->
   <extension-point id="lookandfeel" name="%lookAndFeelName"/>
<!--	This extension point allows for providing source contributors for 
		a new Visual class of a certain kind
		
		<extension 
   			point="org.eclipse.ve.jfc.newsource">
      	<contributor
      		type="javax.swing.JFrame"
      		class="org.eclipse.ve.internal.jfc.core.JFrameSourceContributor"/>
      	<contributor
      		type="javax.swing.JPanel"
      		class="org.eclipse.ve.internal.jfc.core.JPanelSourceContributor"/>
   		</extension>
		The class specified to the class attribute should implement
		org.eclipse.ve.internal.jfc.wizards.IVisualClassCreationSourceContributor-->
   <extension-point id="newsource" name="%newSourceContrbutorsName"/>
<!--
	This extension point allows for providing contributors for the Choosebean dialog.
	A contributor should implement the interface org.eclipse.ve.internal.java.choosebean.IChooseBeanContributor,
	which provides the name of the contribution, and a filter for that contribution.
	<extension point = "org.eclipse.ve.java.core.choosebean">
		<contributor class="org.eclipse.ve.internal.java.choosebean.AllTypesChooseBeanContributor"/>
	</extension>
-->
   <extension-point id="choosebean" name="%choosebeanContributorsName"/>
   <extension-point id="contributors" name="%vecontributors" schema="schema/contributors.exsd"/>
   <extension-point id="registrations" name="%registrationsName" schema="schema/registrations.exsd"/>
   <extension-point id="newStyleComponent" name="%newStyleComponentName" schema="schema/newStyleComponent.exsd"/>

   <extension
         point="org.eclipse.emf.ecore.generated_package">
      <package
            uri="http:///org/eclipse/ve/internal/jcm.ecore"
            class="org.eclipse.ve.internal.jcm.JCMPackage">
      </package>
   </extension>
   <extension
         point="org.eclipse.ve.cde.adapter">
      <adapter
            typeclass="org.eclipse.jem.beaninfo/org.eclipse.jem.internal.beaninfo.PropertyDecorator"
            adapterclass="org.eclipse.ve.internal.java.core.BeanPropertyDescriptorAdapter">
      </adapter>
   </extension>
   <extension
         point="org.eclipse.jem.beaninfo.registrations">
      <registration
            container="org.eclipse.jdt.launching.JRE_CONTAINER">
         <override
               package="..ROOT.."
               path="overrides">
         </override>
         <override
               package="java.lang"
               path="overrides/java/lang">
         </override>
      </registration>
   </extension>
<!-- 
     Events popup on a JavaBean in the Java Beans view or GEF viewer
     -->
   <extension
         point="org.eclipse.ui.popupMenus">
      <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.java.events.popup.object">
         <action
               label="%events.label"
               style="pulldown"
               class="org.eclipse.ve.internal.java.core.JavaBeanEventsObjectActionDelegate"
               menubarPath="group.add"
               enablesFor="1"
               id="org.eclipse.ve.java.visual.events">
         </action>
      </objectContribution>
<!--
     Events popup for an existing listener in the Java Beans view, i.e. add a focusLost method to an existing focusListener 
     ( that may have a callback already present for another method such as focusGained )
     -->
      <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.EventInvocationAndListenerTreeEditPart"
            id="org.eclipse.ve.java.listener.events.popup.object">
         <action
               label="%events.label"
               style="pulldown"
               class="org.eclipse.ve.internal.java.core.EventInvocationAndListenerEventsObjectActionDelegate"
               menubarPath="group.add"
               enablesFor="1"
               id="org.eclipse.ve.java.visual.listener.events">
         </action>
      </objectContribution>
<!-- ======================================================================== -->
<!-- Extend the popup menu on Edit parts                                      -->
<!-- ======================================================================== -->
      <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.internal.java.codegen.editorpart.renameaction.popup.object">
         <action
               label="%PopupMenus.RenameAction.Label Rename field"
               class="org.eclipse.ve.internal.java.codegen.editorpart.RenameJavaBeanObjectActionDelegate"
               menubarPath="org.eclipse.gef.group.edit"
               enablesFor="1"
               id="org.eclipse.ve.internal.java.codegen.editorpart.renameaction">
         </action>
      </objectContribution>
<!-- Add a popup to open the Customize Layout window -->
      <objectContribution
            objectClass="org.eclipse.ve.internal.java.core.IJavaBeanContextMenuContributor"
            id="org.eclipse.ve.internal.java.core.editorpart.customizelayout.popup.object">
         <action
               label="%PopupMenus.OpenCustomizeLayoutAction.Label  Open Customize Layout Window"
               class="org.eclipse.ve.internal.cde.core.OpenCustomizeLayoutObjectActionDelegate"
               id="org.eclipse.ve.internal.java.core.opencustomizelayoutaction">
         </action>
      </objectContribution>
      
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            name="%VCE.preferenceName Visual Editor"
            category="org.eclipse.jdt.ui.preferences.JavaBasePreferencePage"
            class="org.eclipse.ve.internal.java.vce.VCEPreferencePage"
            id="org.eclipse.ve.internal.java.vce.VCEPreferencePage">
      </page>
   </extension>
   <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            name="%configType.name Java Bean"
            delegate="org.eclipse.ve.internal.java.vce.launcher.JavaBeanLaunchConfigurationDelegate"
            modes="run, debug"
            id="org.eclipse.ve.java.core.launcher.JavaBean"
            sourceLocatorId="org.eclipse.jdt.launching.sourceLocator.JavaSourceLookupDirector"
            sourcePathComputerId="org.eclipse.jdt.launching.sourceLookup.javaSourcePathComputer">
         <fileExtension
               default="false"
               extension="java">
         </fileExtension>
         <fileExtension
               default="false"
               extension="class">
         </fileExtension>
      </launchConfigurationType>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTypeImages">
      <launchConfigurationTypeImage
            icon="icons/full/ctool16/java_bean_launcher.gif"
            configTypeID="org.eclipse.ve.java.core.launcher.JavaBean"
            id="org.eclipse.ve.internal.java.vce.launcher.JavaBean.images">
      </launchConfigurationTypeImage>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            label="%shortcut.label Java Bean"
            icon="icons/full/ctool16/java_bean_launcher.gif"
            modes="run, debug"
            class="org.eclipse.ve.internal.java.vce.launcher.JavaBeanShortcut"
            id="org.eclipse.ve.internal.java.core.vce.localJavaShortcut">
         <perspective
               id="org.eclipse.jdt.ui.JavaPerspective">
         </perspective>
         <perspective
               id="org.eclipse.jdt.ui.JavaHierarchyPerspective">
         </perspective>
         <perspective
               id="org.eclipse.jdt.ui.JavaBrowsingPerspective">
         </perspective>
         <perspective
               id="org.eclipse.debug.ui.DebugPerspective">
         </perspective>
      </shortcut>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups">
      <launchConfigurationTabGroup
            type="org.eclipse.ve.java.core.launcher.JavaBean"
            class="org.eclipse.ve.internal.java.vce.launcher.JavaBeanLauncherTabGroup"
            id="org.eclipse.ve.internal.java.vce.JavaBeanLauncherConfigurationTabGroup">
      </launchConfigurationTabGroup>
   </extension>
<!-- Define the default pattern style -->
   <extension
         point="org.eclipse.ve.java.core.style">
      <style
            description="%Style.GetterStyle.Desc Getter style (Visual Editor Default)"
            id="GetterStyle">
         <prefui
               class="org.eclipse.ve.internal.java.codegen.java.rules.VCEPrefContributor">
         </prefui>
         <rule
               class="org.eclipse.ve.internal.java.vce.rules.VCEPropertyRule"
               id="org.eclipse.ve.internal.java.rules.IPropertyRule">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.vce.rules.VCEChildRule"
               id="org.eclipse.ve.internal.java.rules.IChildRule">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.InstanceVariableRule"
               id="ruleInstanceVariable">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.InstanceVariableRule"
               id="ruleMethodVariable">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.OverideMethodVisitRule"
               id="ruleOverideMethod">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.IfStatementRule"
               id="ruleIfStatement">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.ReturnStmtRule"
               id="ruleReturnStatement">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.ThisReferenceRule"
               id="ruleIThisReference">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.InstanceVariableCreationRule"
               id="ruleInstanceVariableCreation">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.BeanNameProposalRule"
               id="ruleBeanNameProposal">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.EventProcessingRule"
               id="ruleEventProcessing">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.EventMethodParsingRule"
               id="ruleEventMethodParsing">
         </rule>
         <rule
               class="org.eclipse.ve.internal.java.codegen.java.rules.ParentChildRelationship"
               id="ruleParentChild">
         </rule>
      </style>
   </extension>
<!-- ============================================================================================================== -->
<!-- The JavaVisualEditorPart wrappers a JBCF editor and a Java Editor with a splitpane or notebook separating them -->
<!-- ============================================================================================================== -->
   <extension
         point="org.eclipse.ui.editors">
      <editor
            name="%jveeditor Visual Editor"
            default="false"
            icon="icons/full/obj16/javavisualeditor_obj.gif"
            extensions="java"
            contributorClass="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorActionContributor"
            class="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart"
            id="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditor">
      </editor>
   </extension>
<!-- =============================================================================== -->
<!-- Add the Refactor and Navigate action sets to the menu when the editor is active -->
<!-- =============================================================================== -->
   <extension
         point="org.eclipse.ui.actionSetPartAssociations">
      <actionSetPartAssociation
            targetID="org.eclipse.jdt.ui.CodingActionSet">
         <part
               id="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditor">
         </part>
      </actionSetPartAssociation>
<!-- ============================================================= -->
<!-- Extend the Search menu with the action set for the JavaEditor -->
<!-- ============================================================= -->
      <actionSetPartAssociation
            targetID="org.eclipse.jdt.ui.SearchActionSet">
         <part
               id="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditor">
         </part>
      </actionSetPartAssociation>
<!-- ================================================================================= -->
<!-- The Open Type Hierarchy and Open Type are defined in their own action set         -->
<!-- that we must associate with the JavaVisualEditor to get them on the navigate menu -->
<!-- ================================================================================= -->
      <actionSetPartAssociation
            targetID="org.eclipse.jdt.ui.A_OpenActionSet">
         <part
               id="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditor">
         </part>
      </actionSetPartAssociation>
   </extension>
<!-- ============================================================================================================== -->
<!-- Editor actions are editor specific, so we need to duplicate them here.                                         -->
<!-- ============================================================================================================== -->
   <extension
         point="org.eclipse.ui.editorActions">
      <editorContribution
            targetID="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditor"
            id="org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.BreakpointRulerActions">
         <action
               label="%Dummy.label"
               class="org.eclipse.jdt.internal.debug.ui.actions.ManageBreakpointRulerActionDelegate"
               actionID="RulerDoubleClick"
               id="org.eclipse.jdt.ui.actions.ManageBreakpointRulerAction">
         </action>
         <action
               label="%Dummy.label"
               class="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction"
               actionID="RulerClick"
               id="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction">
         </action>
      </editorContribution>
   </extension>
<!-- ============================ -->
<!-- Define the Java Beans viewer -->
<!-- ============================ -->
   <extension
         point="org.eclipse.ui.views">
      <view
            name="%javabeansview Java Beans"
            icon="icons/full/ctool16/javavisualeditor_co.gif"
            category="org.eclipse.jdt.ui.java"
            class="org.eclipse.ve.internal.java.codegen.editorpart.BeansList"
            id="org.eclipse.ve.internal.java.codegen.editorpart.BeansList">
      </view>
   </extension>
<!-- ========================================================================================= -->
<!-- Extend the Java perspective so the Java Beans viewer appears beneath the resources viewer -->
<!-- and the Properties appears stacked on the problems view at the bottom                     -->
<!-- and the Palette to the left of the editor part											   -->
<!-- ========================================================================================= -->
   <extension
         point="org.eclipse.ui.perspectiveExtensions">
      <perspectiveExtension
            targetID="org.eclipse.jdt.ui.JavaPerspective">
         <newWizardShortcut
               id="org.eclipse.ve.internal.java.codegen.wizards.NewVisualClassCreationWizard">
         </newWizardShortcut>
         <viewShortcut
               id="org.eclipse.ui.views.PropertySheet">
         </viewShortcut>
         <view
               ratio="0.5"
               relative="org.eclipse.ui.views.ResourceNavigator"
               visible="false"
               relationship="bottom"
               id="org.eclipse.ve.internal.java.codegen.editorpart.BeansList">
         </view>
         <view
               relative="org.eclipse.ui.views.ProblemView"
               visible="false"
               relationship="stack"
               id="org.eclipse.ui.views.PropertySheet">
         </view>
         <view
               ratio="0.16"
               relative="org.eclipse.ui.editorss"
               visible="false"
               relationship="left"
               id="org.eclipse.gef.ui.palette_view">
         </view>
         
      </perspectiveExtension>
      
      
<!-- ====================================================================================================== -->
<!-- Extend the JavaBrowsing perspective so the JavaBeans and Properties appears on top of the members list -->
<!-- and the properties viewer to the right of the editor part                                              -->
<!-- and the palette to the left of the editor part															-->
<!-- ====================================================================================================== -->
      <perspectiveExtension
            targetID="org.eclipse.jdt.ui.JavaBrowsingPerspective">
         <newWizardShortcut
               id="org.eclipse.ve.internal.java.codegen.wizards.NewVisualClassCreationWizard">
         </newWizardShortcut>
         <viewShortcut
               id="org.eclipse.ui.views.PropertySheet">
         </viewShortcut>
         <view
               relative="org.eclipse.jdt.ui.MembersView"
               visible="false"
               relationship="stack"
               id="org.eclipse.ve.internal.java.codegen.editorpart.BeansList">
         </view>
         <view
               ratio="0.70"
               relative="org.eclipse.ui.editorss"
               visible="false"
               relationship="right"
               id="org.eclipse.ui.views.PropertySheet">
         </view>
         <view
               ratio="0.16"
               relative="org.eclipse.ui.editorss"
               visible="false"
               relationship="left"
               id="org.eclipse.gef.ui.palette_view">
         </view>         
      </perspectiveExtension>
<!-- ======================================================+==================== -->
<!-- Extend the Debug perspective so the JavaBeans appears on top of the outline -->
<!-- =========================================================================== -->
      <perspectiveExtension
            targetID="org.eclipse.debug.ui.DebugPerspective">
         <view
               relative="org.eclipse.ui.views.ContentOutline"
               visible="false"
               relationship="stack"
               id="org.eclipse.ve.internal.java.codegen.editorpart.BeansList">
         </view>
      </perspectiveExtension>
   </extension>
   <extension
         point="org.eclipse.ui.newWizards">
      <category
            name="%Examples.category"
            parentCategory="org.eclipse.ui.Examples"
            id="org.eclipse.ve.java.core.examples">
      </category>
      <wizard
            javatype="true"
            name="%visualclass"
            icon="icons/full/ctool16/newvisualclass_wiz.gif"
            category="org.eclipse.jdt.ui.java"
            class="org.eclipse.ve.internal.java.codegen.wizards.NewVisualClassCreationWizard"
            id="org.eclipse.ve.internal.java.codegen.wizards.NewVisualClassCreationWizard">
         <description>
            %visual.class
         </description>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ve.java.core.choosebean">
      <contributor container="org.eclipse.jdt.launching.JRE_CONTAINER"
            class="org.eclipse.ve.internal.java.choosebean.AllTypesChooseBeanContributor">
      </contributor>
      <contributor container="org.eclipse.jdt.launching.JRE_CONTAINER"
            class="org.eclipse.ve.internal.java.choosebean.SwingChooseBeanContributor">
      </contributor>
      <contributor container="org.eclipse.jdt.launching.JRE_CONTAINER"
            class="org.eclipse.ve.internal.java.choosebean.AWTChooseBeanContributor">
      </contributor>
   </extension>
   
   <extension
 		point="org.eclipse.ve.java.core.newStyleComponent">
		<category
			name="%NewStyleComponent.Other"
			id="org.eclipse.ve.core.other"
			priority="1000"
			defaultExpand="true">
		</category>
			<visualElement
				name="%NewStyleComponent.Object"
				category="org.eclipse.ve.core.other"
				type="java.lang.Object">
			</visualElement>
	</extension>

</plugin>
